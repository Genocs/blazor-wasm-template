# Build and push a Docker image to Azure Container Registry
# The stage contains a couple of build and push
# One for Develop and one for Production
# https://aka.ms/yaml
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# NOTE: Each docker image shall tag with a unique number.
#        That number is the value coming from 'Build.BuildId' global variable

# Before run pipeline please check the variables
# *** Library variables ***
# AcrConnectionDev:   The Acr Service connection for NO-Prod enviroments
# AcrConnectionProd:  The Acr Service connection for PROD enviroments
# PatNugetsFeed:      The PAT to enable access to Private Nuget Feed

# *** Pipeline variables ***
# MajorVer:           The MajorVer Used for pipeline definition
# MinorVer:           The MinorVer Used for pipeline definition
# RepositoryName:     The name of the ACR Repository Name (To be used only for Azure Deployment)
# HostFolder:         The folder name where the host with Dockerfile is placed it could be (WebApi|worker)

# Changing the name the variable $(Build.BuildNumber) will change as well
name: $(MajorVer).$(MinorVer)$(Rev:.r)

# manual trigger
trigger:
  - none

pool:
  name: Azure Pipelines
  vmImage: ubuntu-latest # Agent VM image name

resources:
  - repo: self

variables:
  # Here is how to read the Variables from Variable group
  - group: "General" # The variable group Name

stages:
  - stage: BuildDev
    displayName: Docker Image (Dev)
    condition: and(always(), contains(variables['Build.SourceBranch'], 'refs/heads/develop'))
    jobs:
      - job: Build
        displayName: Build

        steps:
          - task: Docker@2
            displayName: "Build Image"
            inputs:
              command: build
              repository: $(RepositoryName)
              tags: "$(Build.BuildId),latest" # Use build number as tag
              dockerfile: "./src/$(HostFolder)/Dockerfile"
              arguments: --build-arg PAT_VALUE=$(PatNugetsFeed)
              buildContext: "./" # Uncomment if your Dockerfile is not in the root of the repo
              containerRegistry: "$(AcrConnectionDev)"

          - task: Docker@2
            displayName: Push Image
            inputs:
              command: push
              repository: $(RepositoryName)
              tags: "$(Build.BuildId),latest"
              containerRegistry: "$(AcrConnectionDev)"

  - stage: BuildProd
    displayName: Docker Image (Prod)
    condition: and(always(), contains(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - job: Build
        displayName: Build

        steps:
          - task: Docker@2
            displayName: "Build Image"
            inputs:
              command: build
              repository: $(RepositoryName)
              tags: "$(Build.BuildId),latest" # Use build number as tag
              dockerfile: "./src/$(HostFolder)/Dockerfile"
              arguments: --build-arg PAT_VALUE=$(PatNugetsFeed)
              buildContext: "./" # Uncomment if your Dockerfile is not in the root of the repo
              containerRegistry: "$(AcrConnectionProd)"

          - task: Docker@2
            displayName: Push Image
            inputs:
              command: push
              repository: $(RepositoryName)
              tags: "$(Build.BuildId),latest"
              containerRegistry: "$(AcrConnectionProd)"
              condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
